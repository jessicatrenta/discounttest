import { useMemo } from 'react';
import { CheckoutUIExtensionError } from '../errors';
import { useExtensionApi } from './api';
import { useSubscription } from './subscription';

/**
 * Returns the current array of `metafields` applied to the checkout.
 * You can optionally filter the list.
 * @arg {MetafieldsFilters} - filter the list of returned metafields
 */
export function useMetafields(filters) {
  const metaFields = useSubscription(useExtensionApi().metafields);
  return useMemo(() => {
    if (filters) {
      const {
        namespace,
        key
      } = filters;

      if (!namespace) {
        throw new CheckoutUIExtensionError('You must pass in a namespace with a key');
      }

      const filteredResults = metaFields.filter(metafield => metafield.namespace === namespace && (!key || metafield.key === key));
      return filteredResults;
    }

    return metaFields;
  }, [filters, metaFields]);
}
/**
 * Returns a function to mutate the `metafields` property of the checkout.
 */

export function useApplyMetafieldsChange() {
  return useExtensionApi().applyMetafieldChange;
}